# Project-wide Gradle settings.

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx512m -XX:MaxMetaspaceSize=256m
org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true

# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true
# Automatically convert third-party libraries to use AndroidX
android.enableJetifier=true

# Version of flipper SDK to use with React Native
FLIPPER_VERSION=0.125.0

# Use this property to specify which architecture you want to build.
# You can also override it from the CLI using
# ./gradlew <task> -PreactNativeArchitectures=x86_64
reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64

# Use this property to enable support to the new architecture.
# This will allow you to use TurboModules and the Fabric render in
# your application. You should enable this flag either if you want
# to write custom TurboModules/Fabric components OR use libraries that
# are providing them.
newArchEnabled=false
GOOGLE_API_CREDENTIALS = "ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAicGMtYXBpLTU2ODczNjc1Mzg2MTgxMTY5NzEtNTAiLAogICJwcml2YXRlX2tleV9pZCI6ICIwNjNiZDQ2YTJlNGRiNDU0NDk5ZTJlOGFmMDE0NjVkZTY5ZDBhNjNiIiwKICAicHJpdmF0ZV9rZXkiOiAiLS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tXG5NSUlFdlFJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLY3dnZ1NqQWdFQUFvSUJBUUN2LzJOaU43OEV3VmE4XG5HSmUwY1B0L0pvOUpDUGFBMElLSHJGZzdJSVdJNXE0VmRDY1RoYlNzTXFmZEJZNmlsSDh4SXVnZi9DRklpMUc4XG5UeThpUEtic0lKV2RqcEo1dzd3dE9jN3I4b3Mvazc4UWZtOFFUeVQ0MDlheit5QW9GeTkxVEZRWFZGQWRadG8vXG5idkJMZ1R0UTJEdTNHeWJDSU5GR1pFRlA1Q0wyYXZEK3R4UDdyWlUyVXUvSzhRV2Fha2tpWGtOSXNvRE5DbkZpXG5KVTRSL2UvTmlWUjJtZW5NMnVnT2VuZUt3ellpWlFkZXIrbWlLa29EUm1wMWtwR0JRNlA4cDVKS3NnUDJJTUdCXG5aOWVwSWR5TWJ3ZzJaeDYvK1g5OGh4T0Rub3FXbXd1RThoMHRWdW1kR05MWndid3ZLRklxYXFmUUNTUkt0Z05qXG5oYXVpYW1JaEFnTUJBQUVDZ2dFQUFzNnJPbFBPdGNiT3lEUXJCT25GNmJ6ZVdreGlFV2RYWDBYcFFiWEpVdmJ3XG5tOXU2NFUyYTZhcEFRSnpxUHdlMTBXZ2c1bnFDUUhnbGdLYXZYR3JQbGlUVXBaWFV4UWUzNFZQZFRBOHZodFIwXG5kQjNNY0RGVGhpWEJCWHBrRlkxOXFFVUdnOU1FS2lFNjFOZi9FZmo3K1VOUnQ3blNsRWRuSVV3VUJqaWtSQ0JwXG5kUkc3OTE1THN5aUk2TXFtdlcxM0QzZHlkbHhvK2VyNFNnazlHU3BaQlhMZDg4emJCc2ppZ0h0MmFReHk3SU13XG5TbTkyelNNc0srMHhBZTdpOXJYK3ZIaXNGNml0Z0FRdS9uNC9PeTB3cVNDeGlrNWh5SW1uZEIxbElST1A3NytsXG5TUVU4UnBsY3FiazZDdnRXVEpGY3oxb0Z3djVOT2p5WjVTdjZxQ2FGYVFLQmdRRFovRjM2NEJMTVZsOEhDSW9uXG5DeEdUQXhHUVNnemRWcE5idmtBZFhSNXVZdlpTY2Q3M0plZ1hJZGZlK0VrMCtkUHdhcGxZVnQ5cUlUNEVjRGxXXG5NZ2JpektFWVdmYnkxSE1qKzdDTC8wU0lFTXpHR0ZQbm50cHlyeXJEM0F3MzlIVkJqVkhHNytqNnlHdFN1Q09ZXG5UYU5PL0FBSjV4b2J0d3E0bGw4OHlwRmN2UUtCZ1FET3NJWXVpeEpVM1lML2ozTW50cnRXKzV2dUxzUTdoa2d0XG5uUTVXOXkyVWE2L3lDeGh3dkhpNXJ5YmxSdlpoLzF0YUVGWEYydmUvbTAwZlo2WWVxb2pJRDVkenRtZTdrWUhYXG52UWpuUUxoSkRPWEdMOUw3dEwrTGhCWHhoSU40bXVNTVR1UlY2OXI5NXpvQ3A5cm03MHF6akRlLytHRUNLTk1lXG5yY1VJZlBkYk5RS0JnUUNLdENlRXE3R3FiY2IzcmJwaWo0dDJOUHluQ0VkWlMyNW1jUTlRMytDdU1yQXowNXNoXG5QZkNKVDVLUm9RRE1BYStYQ2UxYkphUHhYd2VjUVdCcWRWaW1WYmlueXc3MGdyUmxFQkROYy9kQ2NSWXJjbTFwXG5NMDRpclUwVDVWK3M5eExwVENmZDR1Z25Nd0gvVjRYbXNuZ1ltUWJaUmtENW82WGh3R1VIUkluc0xRS0JnRzFwXG5QRjUrOStFOHNRK2ZYQkgxeFEyeWUwU0dOUkpkYnUvV1o3VFplNk5KcmdXdW9lMXJsMnlUcno5SFpUMVM4NFNsXG5pUUlIZTRaT0szRW9hT05xMnFVc3U3dGhIMkJIRWppbHRJVFYyYmV4d0NBOVNLNDlhL2ZxbjhNTnBwcTlRdHROXG5GOG56NUNUcnRlV1ovV0twNFIxU2FHQ1NscWVSL05BTXBIUnQwbkxSQW9HQVZjMWNsbUV1QVNlTllWT3NDZ0x5XG4yV3EwMHR4SytPTDRKcHJHS2hoWjdHaGpPcVBzRytSUVVjYi9NS1lxeFNHRURhdXVONGJwemZjRXRHWkJSNTIrXG4rakJBMExCc2ZYZVgyMFlEaS8zTmF4b2NqMm9zb1FZcFdyZExPU0ZGZlJTVXZNMGRZNzZ6V1MvblpqV0Y2T3JpXG5lS2JmUFVqVVNITG9rcDMvYUg4bk9FTT1cbi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS1cbiIsCiAgImNsaWVudF9lbWFpbCI6ICJtY24tc3Fpbi1pbmctdmVyaWZAcGMtYXBpLTU2ODczNjc1Mzg2MTgxMTY5NzEtNTAuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJjbGllbnRfaWQiOiAiMTE0ODg3MzYxMjIxMTQ2NzI4NzQ2IiwKICAiYXV0aF91cmkiOiAiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28vb2F1dGgyL2F1dGgiLAogICJ0b2tlbl91cmkiOiAiaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5jb20vdG9rZW4iLAogICJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vb2F1dGgyL3YxL2NlcnRzIiwKICAiY2xpZW50X3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vcm9ib3QvdjEvbWV0YWRhdGEveDUwOS9tY24tc3Fpbi1pbmctdmVyaWYlNDBwYy1hcGktNTY4NzM2NzUzODYxODExNjk3MS01MC5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIKfQo='
